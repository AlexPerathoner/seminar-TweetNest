name: Test

on:
  push:
    paths-ignore:
    - CHANGELOG.md
    - LICENSE
    - README.md

env:
  APPLE_ID: "bot@sinoru.io"
  APP_STORE_CONNECT_API_KEY_PATH: "APIKey.json"
  KEYCHAIN_NAME: "build.keychain"
  RUBY_VERSION: 2.7
  XCODE_VERSION: 12.4
      
jobs:
  test-TweetNestKit-iOS:
    name: Test TweetNestKit (iOS)
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: sinoru/actions-setup-xcode@v2
      with:
        xcode-version: ${{ env.XCODE_VERSION }}
        apple-id: ${{ env.APPLE_ID }}
        apple-id-password: ${{ secrets.APPLE_ID_PASSWORD }}
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
        bundler-cache: true
    - run: bundle exec fastlane scan -p TweetNestKit/TweetNestKit.xcodeproj -s "TweetNestKit (iOS)"

  test-TweetNestKit-macOS:
    name: Test TweetNestKit (macOS)
    runs-on: macos-11.0
    steps:
    - uses: actions/checkout@v2
    - uses: sinoru/actions-setup-xcode@v2
      with:
        xcode-version: ${{ env.XCODE_VERSION }}
        apple-id: ${{ env.APPLE_ID }}
        apple-id-password: ${{ secrets.APPLE_ID_PASSWORD }}
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
        bundler-cache: true
    - run: bundle exec fastlane scan -p TweetNestKit/TweetNestKit.xcodeproj -s "TweetNestKit (macOS)"

  test-TweetNest-iOS:
    name: Test TweetNest (iOS)
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Add Deploy Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
    - name: Add App Store Connect API Key
      run: |
        cat <<EOF > "$APP_STORE_CONNECT_API_KEY_PATH"
        {
        "key_id": "4UD4U5446F",
        "issuer_id": "69a6de82-0280-47e3-e053-5b8c7c11a4d1",
        "key": "$(echo "${{ secrets.APP_STORE_CONNECT_API_KEY }}" | sed '$!s/$/\\n/' | tr -d '\n')",
        "in_house": false
        }
        EOF
        cat "$APP_STORE_CONNECT_API_KEY_PATH" 
    - name: Setup Keychain
      run: |
        security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME"
        security default-keychain -s "$KEYCHAIN_NAME"
      env:
        KEYCHAIN_PASSWORD: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}
    - uses: sinoru/actions-setup-xcode@v2
      with:
        xcode-version: ${{ env.XCODE_VERSION }}
        apple-id: ${{ env.APPLE_ID }}
        apple-id-password: ${{ secrets.APPLE_ID_PASSWORD }}
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
        bundler-cache: true
    - run: bundle exec fastlane ios test
      env:
        MATCH_KEYCHAIN_NAME: ${{ env.KEYCHAIN_NAME }}
        MATCH_KEYCHAIN_PASSWORD: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}
        MATCH_PASSWORD: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}

  test-TweetNest-macOS:
    name: Test TweetNest (macOS)
    runs-on: macos-11.0
    steps:
    - uses: actions/checkout@v2
    - name: Add Deploy Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
    - name: Add App Store Connect API Key
      run: |
        cat <<EOF > "$APP_STORE_CONNECT_API_KEY_PATH"
        {
        "key_id": "4UD4U5446F",
        "issuer_id": "69a6de82-0280-47e3-e053-5b8c7c11a4d1",
        "key": "$(echo "${{ secrets.APP_STORE_CONNECT_API_KEY }}" | sed '$!s/$/\\n/' | tr -d '\n')",
        "in_house": false
        }
        EOF
        cat "$APP_STORE_CONNECT_API_KEY_PATH" 
    - name: Setup Keychain
      run: |
        security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME"
        security default-keychain -s "$KEYCHAIN_NAME"
      env:
        KEYCHAIN_PASSWORD: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}
    - uses: sinoru/actions-setup-xcode@v2
      with:
        xcode-version: ${{ env.XCODE_VERSION }}
        apple-id: ${{ env.APPLE_ID }}
        apple-id-password: ${{ secrets.APPLE_ID_PASSWORD }}
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
        bundler-cache: true
    - run: bundle exec fastlane mac test
      env:
        MATCH_KEYCHAIN_NAME: ${{ env.KEYCHAIN_NAME }}
        MATCH_KEYCHAIN_PASSWORD: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}
        MATCH_PASSWORD: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}
