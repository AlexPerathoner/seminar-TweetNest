on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Release

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      release-upload-url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
  release:
    name: Release
    needs: create-release
    strategy:
      matrix:
        target-platform: [iOS, macOS]
    runs-on: macOS-latest
    env:
      APPLE_ID: "bot@sinoru.io"
      IPA_PATH: "TweetNest ${{ matrix.target-platform }}.ipa"
      XCARCHIVE_PATH: "archive/TweetNest ${{ matrix.target-platform }}.xcarchive"
      KEYCHAIN_NAME: "build.keychain"
    steps:
      - uses: actions/checkout@v2
      - name: Add Deploy Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
      - name: Setup Keychain
        run: |
          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME"
          security default-keychain -s "$KEYCHAIN_NAME"
        env:
          KEYCHAIN_PASSWORD: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}
      - uses: sinoru/actions-setup-xcode@v1.1
        with:
          xcode-version: 12.4
          apple-id: bot@sinoru.io
          apple-id-password: ${{ secrets.APPLE_ID_PASSWORD }}
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6 # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - run: bundle exec fastlane ios archive
        if: ${{ matrix.target-platform == "iOS" }}
        env:
          GYM_ARCHIVE_PATH: ${{ env.XCARCHIVE_PATH }}
          MATCH_KEYCHAIN_NAME: ${{ env.KEYCHAIN_NAME }}
          MATCH_KEYCHAIN_PASSWORD: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}
          MATCH_PASSWORD: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}
          MATCH_READONLY: "true"
      - run: bundle exec fastlane mac archive
        if: ${{ matrix.target-platform == "macOS" }}
        env:
          GYM_ARCHIVE_PATH: ${{ env.XCARCHIVE_PATH }}
          MATCH_KEYCHAIN_NAME: ${{ env.KEYCHAIN_NAME }}
          MATCH_KEYCHAIN_PASSWORD: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}
          MATCH_PASSWORD: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}
          MATCH_READONLY: "true"
      - run: hdiutil create -format ULFO -srcfolder archive "TweetNest ${{ matrix.target-platform }}.xcarchive.dmg"
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./TweetNest ${{ matrix.target-platform }}.xcarchive.dmg
          asset_name: TweetNest ${{ matrix.target-platform }}.xcarchive.dmg
          asset_content_type: application/x-apple-diskimage
      # - run: bundle exec fastlane ${{ matrix.target-platform }} deploy_beta
      #   env:
      #     FASTLANE_USER: ${{ env.APPLE_ID }}
      #     FASTLANE_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
      #     GYM_ARCHIVE_PATH: ${{ env.XCARCHIVE_PATH }}
      #     GYM_OUTPUT_NAME: ${{ env.IPA_PATH }}
      #     MATCH_KEYCHAIN_NAME: ${{ env.KEYCHAIN_NAME }}
      #     MATCH_KEYCHAIN_PASSWORD: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}
      #     MATCH_PASSWORD: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}
      #     MATCH_READONLY: "true"
      # - uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
      #     asset_path: ./TweetNest ${{ matrix.target-platform }}.ipa
      #     asset_name: TweetNest ${{ matrix.target-platform }}.ipa
      #     asset_content_type: application/zip
